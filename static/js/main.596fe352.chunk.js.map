{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/searchBox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","mon","map","SearchBx","placeholder","EventHandler","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","Response","json","JsonResponse","this","flitterMonster","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAEaA,EAAO,SAACC,GAClB,OACK,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,KACnE,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCJlBC,EAAU,SAAER,GAAF,OAClB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,IAAIC,KAAI,SAAAP,GAAO,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCFrBO,G,MAAW,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAcC,EAAkB,EAAlBA,aACtC,OACE,uBACEZ,UAAU,YACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BDG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAWFC,aAAa,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXpC,EAAKC,MAAQ,CACXpB,QAAS,GACTiB,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAkB,EAAKT,SAAS,CAAEhB,QAASyB,S,oBAKrD,WAAU,IAAD,EAC0BC,KAAKN,MAA9BpB,EADD,EACCA,QAASiB,EADV,EACUA,YACXU,EAAiB3B,EAAQ4B,QAC7B,SAAC5B,GAAD,OAAaA,EAAQG,KAAK0B,cAAcC,SAASb,MAGnD,OACE,sBAAKnB,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,qBACA,cAAC,EAAD,CACEW,YAAc,cACdC,aAAcgB,KAAKZ,eAErB,cAAC,EAAD,CAAUR,IAAKqB,W,GA7BLI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.596fe352.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = (props) =>{\r\n   return(\r\n        <div className=\"card\"> \r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"\"/>\r\n            <h1>{props.monster.name}</h1> \r\n            <h2>{props.monster.email}</h2>\r\n        </div>\r\n   ) \r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component.jsx';\r\nexport const CardList =( props) =>(\r\n     <div className=\"card-list\">{\r\n          props.mon.map(monster=>(\r\n               <Card key={monster.id} monster={monster}/>\r\n          ))}\r\n     </div>\r\n)","import React  from 'react';\r\n\r\nimport './searchBox.Style.css';\r\n\r\nexport const SearchBx = ({placeholder , EventHandler}) => {\r\n  return (\r\n    <input\r\n      className=\"searchBox\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={EventHandler}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport {SearchBx} from './components/search-box/searchBox.components.jsx';\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((Response) => Response.json())\n      .then((JsonResponse) => this.setState({ monster: JsonResponse }));\n  }\n  handleChange=(e)=>{\n    this.setState({searchField:e.target.value});\n  }\n  render() {\n    const { monster, searchField } = this.state;\n    const flitterMonster = monster.filter(\n      (monster) => monster.name.toLowerCase().includes(searchField)\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"h1\">Monster</h1>\n        <SearchBx\n          placeholder = \"search hear\"\n          EventHandler={this.handleChange}\n        />\n        <CardList mon={flitterMonster}></CardList>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}